#!/bin/sh

APPID=com.palm.openssl
# Handle execution as pmPreRemove.script
if [ -z "$IPKG_OFFLINE_ROOT" ]; then
  IPKG_OFFLINE_ROOT=/media/cryptofs/apps
  mount -o remount,rw /
fi

mount -o remount,rw /

APPS=/media/cryptofs/apps

[ -d ${APPS} ] || { echo "Requires webOS 1.3.5 or later" ; exit 1 ; }

SRCDIR=${APPS}/usr/palm/applications/${APPID}
error=0
if [ -L /usr/lib/ssl/trustedcerts ]; then
  echo "removing symlink /usr/lib/ssl/trustedcerts"
  rm -rf /usr/lib/ssl/trustedcerts
fi

if [ -d /etc/ssl/scripts ]; then
  echo "removing app files"
  cd /etc/ssl/
  rm -f /etc/ssl/scripts/deploycerts.sh
  rm -f /etc/ssl/scripts/verifylinks.sh
  rm -f /etc/ssl/scripts/movecerts.sh
  rm -f /etc/ssl/scripts/cleancerts.sh
  rm -rf /etc/ssl/scripts/rootcerts
  rm -rf ${SRCDIR}
  rm -f /etc/ssl/scripts/root-certs.tar.gz
fi


if [ -f /usr/lib/libcrypto.so.0.9.8.webosinternals.orig ]; then
  cp -f /usr/lib/libcrypto.so.0.9.8.webosinternals.orig /usr/lib/libcrypto.so.0.9.8 || \
  { echo "error occurred restoring libcrypto.so.0.9.8"     ; error=1 ; }
  if [ "${error}" = "1" ]; then
    error=0
    mv -f /usr/lib/libcrypto.so.0.9.8.webosinternals.orig /usr/lib/libcrypto.so.0.9.8 || \
    { echo "error occurred restoring libcrypto.so.0.9.8"     ; error=1 ; }
  fi
  if [ "${error}" = "1" ]; then
      echo "unable to restore libcrypto.so.0.9.8"
      error=0
  elif [ -f /usr/lib/libcrypto.so.0.9.8.webosinternals.orig ]; then
    rm -f /usr/lib/libcrypto.so.0.9.8.webosinternals.orig
  fi
fi

if [ -f /usr/lib/libssl.so.0.9.8.webosinternals.orig ]; then
  cp -f /usr/lib/libssl.so.0.9.8.webosinternals.orig /usr/lib/libssl.so.0.9.8 || \
  { echo "error occurred restoring libssl.so.0.9.8"     ; error=1 ; }
  if [ "${error}" = "1" ]; then
    error=0
    mv -f /usr/lib/libssl.so.0.9.8.webosinternals.orig /usr/lib/libssl.so.0.9.8 || \
    { echo "error occurred restoring libssl.so.0.9.8"     ; error=1 ; }
  fi
  if [ "${error}" = "1" ]; then
      echo "unable to restore libssl.so.0.9.8"
      error=0
  elif [ -f /usr/lib/libssl.so.0.9.8.webosinternals.orig ]; then
    rm -f /usr/lib/libssl.so.0.9.8.webosinternals.orig
  fi
fi

if [ -f /usr/bin/openssl.webosinternals.orig ]; then
  cp -f /usr/bin/openssl.webosinternals.orig /usr/bin/openssl || \
  { echo "error occurred restoring openssl"     ; error=1 ; }
  if [ "${error}" = "1" ]; then
    error=0
    mv -f /usr/bin/openssl.webosinternals.orig /usr/bin/openssl || \
    { echo "error occurred restoring openssl"     ; error=1 ; }
  fi
  if [ "${error}" = "1" ]; then
      echo "unable to restore openssl"
      error=0
  elif [ -f /usr/bin/openssl.webosinternals.orig ]; then
    rm -f /usr/bin/openssl.webosinternals.orig
  fi
fi

if [ -f /etc/ssl/openssl.cnf.webosinternals.orig ]; then
  cp -f /etc/ssl/openssl.cnf.webosinternals.orig /etc/ssl/openssl.cnf || \
  { echo "error occurred restoring openssl.cnf"     ; error=1 ; }
  if [ "${error}" = "1" ]; then
    error=0
    mv -f /etc/ssl/openssl.cnf.webosinternals.orig /etc/ssl/openssl.cnf || \
    { echo "error occurred restoring openssl.cnf"     ; error=1 ; }
  fi
  if [ "${error}" = "1" ]; then
      echo "unable to restore openssl.cnf"
      error=0
  elif [ -f /etc/ssl/openssl.cnf.webosinternals.orig ]; then
    rm -f /etc/ssl/openssl.cnf.webosinternals.orig
  fi
fi

echo "Successfully restored rebooting"
shutdown -r now
sleep 5

exit 0
